pluginBundle {
    website = 'https://github.com/hulian/gradle-docker-plugin'
    vcsUrl = 'https://github.com/hulian/gradle-docker-plugin'
    description = 'Docker打包部署插件'
    tags = ['docker', 'ssh', 'deploy']
    pluginTags = [
        cmdPlugin: ['docker', 'ssh', 'deploy'],
    ]
}

gradlePlugin {
    // Define the plugin
    plugins {
        cmdPlugin {
            displayName = 'gradle-docker-plugin'
            id = 'pub.techfun.docker.plugin.cmd'
            implementationClass = 'pub.techfun.docker.plugin.cmd.DockerPluginCmd'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

