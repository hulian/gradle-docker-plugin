pluginBundle {
    website = 'https://github.com/hulian/gradle-docker-plugin'
    vcsUrl = 'https://github.com/hulian/gradle-docker-plugin'
    description = 'This plugin use pure java client to execute docker command to complete common tasks like build docker image, push to local or remore registry, deploy to local or remote host'
    tags = ['docker', 'ssh', 'deploy']
    pluginTags = [
        cmdPlugin: ['docker', 'ssh', 'deploy'],
    ]
}

gradlePlugin {
    // Define the plugin
    plugins {
        cmdPlugin {
            displayName = 'gradle-docker-plugin'
            id = 'pub.techfun.docker.plugin.java'
            implementationClass = 'pub.techfun.docker.plugin.java.DockerPluginJava'
        }
    }

}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}


dependencies {
    compileOnly project(':gradle-docker-plugin-common')
    compileOnly group: 'com.github.docker-java', name: 'docker-java-core', version: '3.2.13'
    compileOnly group: 'com.github.docker-java', name: 'docker-java-transport-httpclient5', version: '3.2.13'
    compileOnly 'org.apache.sshd:sshd-mina:2.8.0'
    compileOnly 'org.eclipse.jgit:org.eclipse.jgit:5.13.1.202206130422-r'
    testImplementation project(':gradle-docker-plugin-common')
    testImplementation group: 'com.github.docker-java', name: 'docker-java-core', version: '3.2.13'
    testImplementation group: 'com.github.docker-java', name: 'docker-java-transport-httpclient5', version: '3.2.13'
    testImplementation 'org.apache.sshd:sshd-mina:2.8.0'
    testImplementation 'org.eclipse.jgit:org.eclipse.jgit:5.13.1.202206130422-r'
}

jar {
    from {configurations.testRuntimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }}
            .include(
                "META-INF/MANIFEST.MF", "META-INF/gradle-plugins/pub*", "/docker/**", "pub/techfun/**",
                "org/apache/sshd/**","org/apache/mina/**",
                "com/github/dockerjava/**","org/apache/httpcomponents/**","net/java/**","com/google/common/**",
                "org/apache/hc/**","com/sun/jna/**",
                "org/eclipse/**",
                "commons-codec/**","commons-io/**","org.bouncycastle/**",
                "org/sl4j/**", "org/apache/commons/**","com/fasterxml/**"
            ).duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

//common模块不在运行时依赖里，不会自动编译
compileJava.dependsOn(project(':gradle-docker-plugin-common').getTasks().getByName("build"))

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task copyToDist {
    doLast {
        copy {
            from "build/libs/$project.name-${project.version}.jar"
            into "../dist"
        }
    }
}
build.finalizedBy(copyToDist)


